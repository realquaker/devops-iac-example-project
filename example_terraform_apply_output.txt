data.aws_caller_identity.current: Reading...
data.aws_caller_identity.current: Read complete after 0s [id=<hidden>]

Terraform used the selected providers to generate the following execution plan. Resource actions are indicated with the following symbols:
  + create

Terraform will perform the following actions:

  # aws_key_pair.tf_key will be created
  + resource "aws_key_pair" "tf_key" {
      + arn             = (known after apply)
      + fingerprint     = (known after apply)
      + id              = (known after apply)
      + key_name        = "UserPublicKey"
      + key_name_prefix = (known after apply)
      + key_pair_id     = (known after apply)
      + key_type        = (known after apply)
      + public_key      = "ssh-rsa <long_key_here> user@host"
      + tags_all        = (known after apply)
    }

  # aws_kms_key.vault will be created
  + resource "aws_kms_key" "vault" {
      + arn                                = (known after apply)
      + bypass_policy_lockout_safety_check = false
      + customer_master_key_spec           = "SYMMETRIC_DEFAULT"
      + description                        = "An Vaulte KMS key"
      + enable_key_rotation                = false
      + id                                 = (known after apply)
      + is_enabled                         = true
      + key_id                             = (known after apply)
      + key_usage                          = "ENCRYPT_DECRYPT"
      + multi_region                       = (known after apply)
      + policy                             = (known after apply)
      + rotation_period_in_days            = (known after apply)
      + tags_all                           = (known after apply)
    }

  # aws_route.route_2_cloud will be created
  + resource "aws_route" "route_2_cloud" {
      + destination_cidr_block    = "172.16.0.0/16"
      + id                        = (known after apply)
      + instance_id               = (known after apply)
      + instance_owner_id         = (known after apply)
      + network_interface_id      = (known after apply)
      + origin                    = (known after apply)
      + route_table_id            = (known after apply)
      + state                     = (known after apply)
      + vpc_peering_connection_id = (known after apply)
    }

  # aws_route.route_2_onprem will be created
  + resource "aws_route" "route_2_onprem" {
      + destination_cidr_block    = "172.21.0.0/16"
      + id                        = (known after apply)
      + instance_id               = (known after apply)
      + instance_owner_id         = (known after apply)
      + network_interface_id      = (known after apply)
      + origin                    = (known after apply)
      + route_table_id            = (known after apply)
      + state                     = (known after apply)
      + vpc_peering_connection_id = (known after apply)
    }

  # aws_vpc_peering_connection.onprem_2_cloud_vpc_peering will be created
  + resource "aws_vpc_peering_connection" "onprem_2_cloud_vpc_peering" {
      + accept_status = (known after apply)
      + auto_accept   = true
      + id            = (known after apply)
      + peer_owner_id = (known after apply)
      + peer_region   = (known after apply)
      + peer_vpc_id   = (known after apply)
      + tags_all      = (known after apply)
      + vpc_id        = (known after apply)

      + accepter (known after apply)

      + requester (known after apply)
    }

  # module.resources-cloud.aws_eip.cluster[0] will be created
  + resource "aws_eip" "cluster" {
      + allocation_id        = (known after apply)
      + arn                  = (known after apply)
      + association_id       = (known after apply)
      + carrier_ip           = (known after apply)
      + customer_owned_ip    = (known after apply)
      + domain               = "vpc"
      + id                   = (known after apply)
      + instance             = (known after apply)
      + ipam_pool_id         = (known after apply)
      + network_border_group = (known after apply)
      + network_interface    = (known after apply)
      + private_dns          = (known after apply)
      + private_ip           = (known after apply)
      + ptr_record           = (known after apply)
      + public_dns           = (known after apply)
      + public_ip            = (known after apply)
      + public_ipv4_pool     = (known after apply)
      + tags_all             = (known after apply)
      + vpc                  = (known after apply)
    }

  # module.resources-cloud.aws_eip.cluster[1] will be created
  + resource "aws_eip" "cluster" {
      + allocation_id        = (known after apply)
      + arn                  = (known after apply)
      + association_id       = (known after apply)
      + carrier_ip           = (known after apply)
      + customer_owned_ip    = (known after apply)
      + domain               = "vpc"
      + id                   = (known after apply)
      + instance             = (known after apply)
      + ipam_pool_id         = (known after apply)
      + network_border_group = (known after apply)
      + network_interface    = (known after apply)
      + private_dns          = (known after apply)
      + private_ip           = (known after apply)
      + ptr_record           = (known after apply)
      + public_dns           = (known after apply)
      + public_ip            = (known after apply)
      + public_ipv4_pool     = (known after apply)
      + tags_all             = (known after apply)
      + vpc                  = (known after apply)
    }

  # module.resources-cloud.aws_eip.cluster[2] will be created
  + resource "aws_eip" "cluster" {
      + allocation_id        = (known after apply)
      + arn                  = (known after apply)
      + association_id       = (known after apply)
      + carrier_ip           = (known after apply)
      + customer_owned_ip    = (known after apply)
      + domain               = "vpc"
      + id                   = (known after apply)
      + instance             = (known after apply)
      + ipam_pool_id         = (known after apply)
      + network_border_group = (known after apply)
      + network_interface    = (known after apply)
      + private_dns          = (known after apply)
      + private_ip           = (known after apply)
      + ptr_record           = (known after apply)
      + public_dns           = (known after apply)
      + public_ip            = (known after apply)
      + public_ipv4_pool     = (known after apply)
      + tags_all             = (known after apply)
      + vpc                  = (known after apply)
    }

  # module.resources-cloud.aws_eip_association.cluster[0] will be created
  + resource "aws_eip_association" "cluster" {
      + allocation_id        = (known after apply)
      + id                   = (known after apply)
      + instance_id          = (known after apply)
      + network_interface_id = (known after apply)
      + private_ip_address   = (known after apply)
      + public_ip            = (known after apply)
    }

  # module.resources-cloud.aws_eip_association.cluster[1] will be created
  + resource "aws_eip_association" "cluster" {
      + allocation_id        = (known after apply)
      + id                   = (known after apply)
      + instance_id          = (known after apply)
      + network_interface_id = (known after apply)
      + private_ip_address   = (known after apply)
      + public_ip            = (known after apply)
    }

  # module.resources-cloud.aws_eip_association.cluster[2] will be created
  + resource "aws_eip_association" "cluster" {
      + allocation_id        = (known after apply)
      + id                   = (known after apply)
      + instance_id          = (known after apply)
      + network_interface_id = (known after apply)
      + private_ip_address   = (known after apply)
      + public_ip            = (known after apply)
    }

  # module.resources-cloud.aws_instance.cluster[0] will be created
  + resource "aws_instance" "cluster" {
      + ami                                  = "ami-03250b0e01c28d196"
      + arn                                  = (known after apply)
      + associate_public_ip_address          = (known after apply)
      + availability_zone                    = (known after apply)
      + cpu_core_count                       = (known after apply)
      + cpu_threads_per_core                 = (known after apply)
      + disable_api_stop                     = (known after apply)
      + disable_api_termination              = (known after apply)
      + ebs_optimized                        = (known after apply)
      + enable_primary_ipv6                  = (known after apply)
      + get_password_data                    = false
      + host_id                              = (known after apply)
      + host_resource_group_arn              = (known after apply)
      + iam_instance_profile                 = (known after apply)
      + id                                   = (known after apply)
      + instance_initiated_shutdown_behavior = (known after apply)
      + instance_lifecycle                   = (known after apply)
      + instance_state                       = (known after apply)
      + instance_type                        = "t2.small"
      + ipv6_address_count                   = (known after apply)
      + ipv6_addresses                       = (known after apply)
      + key_name                             = "UserPublicKey"
      + monitoring                           = (known after apply)
      + outpost_arn                          = (known after apply)
      + password_data                        = (known after apply)
      + placement_group                      = (known after apply)
      + placement_partition_number           = (known after apply)
      + primary_network_interface_id         = (known after apply)
      + private_dns                          = (known after apply)
      + private_ip                           = (known after apply)
      + public_dns                           = (known after apply)
      + public_ip                            = (known after apply)
      + secondary_private_ips                = (known after apply)
      + security_groups                      = (known after apply)
      + source_dest_check                    = true
      + spot_instance_request_id             = (known after apply)
      + subnet_id                            = (known after apply)
      + tags                                 = {
          + "Name" = "CLUSTER_1_dev"
        }
      + tags_all                             = {
          + "Name" = "CLUSTER_1_dev"
        }
      + tenancy                              = "default"
      + user_data                            = (known after apply)
      + user_data_base64                     = (known after apply)
      + user_data_replace_on_change          = false
      + vpc_security_group_ids               = (known after apply)

      + capacity_reservation_specification (known after apply)

      + cpu_options (known after apply)

      + ebs_block_device (known after apply)

      + enclave_options (known after apply)

      + ephemeral_block_device (known after apply)

      + instance_market_options (known after apply)

      + maintenance_options (known after apply)

      + metadata_options (known after apply)

      + network_interface (known after apply)

      + private_dns_name_options (known after apply)

      + root_block_device (known after apply)
    }

  # module.resources-cloud.aws_instance.cluster[1] will be created
  + resource "aws_instance" "cluster" {
      + ami                                  = "ami-03250b0e01c28d196"
      + arn                                  = (known after apply)
      + associate_public_ip_address          = (known after apply)
      + availability_zone                    = (known after apply)
      + cpu_core_count                       = (known after apply)
      + cpu_threads_per_core                 = (known after apply)
      + disable_api_stop                     = (known after apply)
      + disable_api_termination              = (known after apply)
      + ebs_optimized                        = (known after apply)
      + enable_primary_ipv6                  = (known after apply)
      + get_password_data                    = false
      + host_id                              = (known after apply)
      + host_resource_group_arn              = (known after apply)
      + iam_instance_profile                 = (known after apply)
      + id                                   = (known after apply)
      + instance_initiated_shutdown_behavior = (known after apply)
      + instance_lifecycle                   = (known after apply)
      + instance_state                       = (known after apply)
      + instance_type                        = "t2.small"
      + ipv6_address_count                   = (known after apply)
      + ipv6_addresses                       = (known after apply)
      + key_name                             = "UserPublicKey"
      + monitoring                           = (known after apply)
      + outpost_arn                          = (known after apply)
      + password_data                        = (known after apply)
      + placement_group                      = (known after apply)
      + placement_partition_number           = (known after apply)
      + primary_network_interface_id         = (known after apply)
      + private_dns                          = (known after apply)
      + private_ip                           = (known after apply)
      + public_dns                           = (known after apply)
      + public_ip                            = (known after apply)
      + secondary_private_ips                = (known after apply)
      + security_groups                      = (known after apply)
      + source_dest_check                    = true
      + spot_instance_request_id             = (known after apply)
      + subnet_id                            = (known after apply)
      + tags                                 = {
          + "Name" = "CLUSTER_2_dev"
        }
      + tags_all                             = {
          + "Name" = "CLUSTER_2_dev"
        }
      + tenancy                              = "default"
      + user_data                            = (known after apply)
      + user_data_base64                     = (known after apply)
      + user_data_replace_on_change          = false
      + vpc_security_group_ids               = (known after apply)

      + capacity_reservation_specification (known after apply)

      + cpu_options (known after apply)

      + ebs_block_device (known after apply)

      + enclave_options (known after apply)

      + ephemeral_block_device (known after apply)

      + instance_market_options (known after apply)

      + maintenance_options (known after apply)

      + metadata_options (known after apply)

      + network_interface (known after apply)

      + private_dns_name_options (known after apply)

      + root_block_device (known after apply)
    }

  # module.resources-cloud.aws_instance.cluster[2] will be created
  + resource "aws_instance" "cluster" {
      + ami                                  = "ami-03250b0e01c28d196"
      + arn                                  = (known after apply)
      + associate_public_ip_address          = (known after apply)
      + availability_zone                    = (known after apply)
      + cpu_core_count                       = (known after apply)
      + cpu_threads_per_core                 = (known after apply)
      + disable_api_stop                     = (known after apply)
      + disable_api_termination              = (known after apply)
      + ebs_optimized                        = (known after apply)
      + enable_primary_ipv6                  = (known after apply)
      + get_password_data                    = false
      + host_id                              = (known after apply)
      + host_resource_group_arn              = (known after apply)
      + iam_instance_profile                 = (known after apply)
      + id                                   = (known after apply)
      + instance_initiated_shutdown_behavior = (known after apply)
      + instance_lifecycle                   = (known after apply)
      + instance_state                       = (known after apply)
      + instance_type                        = "t2.small"
      + ipv6_address_count                   = (known after apply)
      + ipv6_addresses                       = (known after apply)
      + key_name                             = "UserPublicKey"
      + monitoring                           = (known after apply)
      + outpost_arn                          = (known after apply)
      + password_data                        = (known after apply)
      + placement_group                      = (known after apply)
      + placement_partition_number           = (known after apply)
      + primary_network_interface_id         = (known after apply)
      + private_dns                          = (known after apply)
      + private_ip                           = (known after apply)
      + public_dns                           = (known after apply)
      + public_ip                            = (known after apply)
      + secondary_private_ips                = (known after apply)
      + security_groups                      = (known after apply)
      + source_dest_check                    = true
      + spot_instance_request_id             = (known after apply)
      + subnet_id                            = (known after apply)
      + tags                                 = {
          + "Name" = "CLUSTER_3_dev"
        }
      + tags_all                             = {
          + "Name" = "CLUSTER_3_dev"
        }
      + tenancy                              = "default"
      + user_data                            = (known after apply)
      + user_data_base64                     = (known after apply)
      + user_data_replace_on_change          = false
      + vpc_security_group_ids               = (known after apply)

      + capacity_reservation_specification (known after apply)

      + cpu_options (known after apply)

      + ebs_block_device (known after apply)

      + enclave_options (known after apply)

      + ephemeral_block_device (known after apply)

      + instance_market_options (known after apply)

      + maintenance_options (known after apply)

      + metadata_options (known after apply)

      + network_interface (known after apply)

      + private_dns_name_options (known after apply)

      + root_block_device (known after apply)
    }

  # module.resources-cloud.aws_internet_gateway.cloud_vpc_igw will be created
  + resource "aws_internet_gateway" "cloud_vpc_igw" {
      + arn      = (known after apply)
      + id       = (known after apply)
      + owner_id = (known after apply)
      + tags     = {
          + "Name" = "CLOUD_VPC_IGW_dev"
        }
      + tags_all = {
          + "Name" = "CLOUD_VPC_IGW_dev"
        }
      + vpc_id   = (known after apply)
    }

  # module.resources-cloud.aws_network_acl.cloud_public_subnet_nacl will be created
  + resource "aws_network_acl" "cloud_public_subnet_nacl" {
      + arn        = (known after apply)
      + egress     = [
          + {
              + action          = "allow"
              + cidr_block      = "0.0.0.0/0"
              + from_port       = 0
              + protocol        = "-1"
              + rule_no         = 100
              + to_port         = 0
                # (1 unchanged attribute hidden)
            },
        ]
      + id         = (known after apply)
      + ingress    = [
          + {
              + action          = "allow"
              + cidr_block      = "0.0.0.0/0"
              + from_port       = 0
              + protocol        = "-1"
              + rule_no         = 100
              + to_port         = 0
                # (1 unchanged attribute hidden)
            },
        ]
      + owner_id   = (known after apply)
      + subnet_ids = (known after apply)
      + tags       = {
          + "Name" = "CLOUD_PUBLIC_SUBNET_NACL_dev"
        }
      + tags_all   = {
          + "Name" = "CLOUD_PUBLIC_SUBNET_NACL_dev"
        }
      + vpc_id     = (known after apply)
    }

  # module.resources-cloud.aws_network_acl_association.cloud_public_subnet_nacl_association will be created
  + resource "aws_network_acl_association" "cloud_public_subnet_nacl_association" {
      + id             = (known after apply)
      + network_acl_id = (known after apply)
      + subnet_id      = (known after apply)
    }

  # module.resources-cloud.aws_route_table.cloud_rt will be created
  + resource "aws_route_table" "cloud_rt" {
      + arn              = (known after apply)
      + id               = (known after apply)
      + owner_id         = (known after apply)
      + propagating_vgws = (known after apply)
      + route            = [
          + {
              + cidr_block                 = "0.0.0.0/0"
              + gateway_id                 = (known after apply)
                # (11 unchanged attributes hidden)
            },
        ]
      + tags             = {
          + "Name" = "CLOUD_RT_dev"
        }
      + tags_all         = {
          + "Name" = "CLOUD_RT_dev"
        }
      + vpc_id           = (known after apply)
    }

  # module.resources-cloud.aws_route_table_association.cloud_public_subnet_default_rt_association will be created
  + resource "aws_route_table_association" "cloud_public_subnet_default_rt_association" {
      + id             = (known after apply)
      + route_table_id = (known after apply)
      + subnet_id      = (known after apply)
    }

  # module.resources-cloud.aws_security_group.cluster_access will be created
  + resource "aws_security_group" "cluster_access" {
      + arn                    = (known after apply)
      + description            = "ICMP, HTTP, HTTPS and SSH Cluster Access"
      + egress                 = [
          + {
              + cidr_blocks      = [
                  + "0.0.0.0/0",
                ]
              + from_port        = 0
              + ipv6_cidr_blocks = []
              + prefix_list_ids  = []
              + protocol         = "-1"
              + security_groups  = []
              + self             = false
              + to_port          = 0
                # (1 unchanged attribute hidden)
            },
        ]
      + id                     = (known after apply)
      + ingress                = [
          + {
              + cidr_blocks      = [
                  + "0.0.0.0/0",
                ]
              + from_port        = 22
              + ipv6_cidr_blocks = []
              + prefix_list_ids  = []
              + protocol         = "tcp"
              + security_groups  = []
              + self             = false
              + to_port          = 22
                # (1 unchanged attribute hidden)
            },
          + {
              + cidr_blocks      = [
                  + "0.0.0.0/0",
                ]
              + from_port        = 443
              + ipv6_cidr_blocks = []
              + prefix_list_ids  = []
              + protocol         = "tcp"
              + security_groups  = []
              + self             = false
              + to_port          = 443
                # (1 unchanged attribute hidden)
            },
          + {
              + cidr_blocks      = [
                  + "0.0.0.0/0",
                ]
              + from_port        = 80
              + ipv6_cidr_blocks = []
              + prefix_list_ids  = []
              + protocol         = "tcp"
              + security_groups  = []
              + self             = false
              + to_port          = 80
                # (1 unchanged attribute hidden)
            },
          + {
              + cidr_blocks      = [
                  + "0.0.0.0/0",
                ]
              + from_port        = 8
              + ipv6_cidr_blocks = []
              + prefix_list_ids  = []
              + protocol         = "icmp"
              + security_groups  = []
              + self             = false
              + to_port          = 0
                # (1 unchanged attribute hidden)
            },
        ]
      + name                   = "CLUSTER_ACCESS_dev"
      + name_prefix            = (known after apply)
      + owner_id               = (known after apply)
      + revoke_rules_on_delete = false
      + tags_all               = (known after apply)
      + vpc_id                 = (known after apply)
    }

  # module.resources-cloud.aws_subnet.cloud_public_subnet will be created
  + resource "aws_subnet" "cloud_public_subnet" {
      + arn                                            = (known after apply)
      + assign_ipv6_address_on_creation                = false
      + availability_zone                              = "eu-central-1c"
      + availability_zone_id                           = (known after apply)
      + cidr_block                                     = "172.16.0.0/24"
      + enable_dns64                                   = false
      + enable_resource_name_dns_a_record_on_launch    = false
      + enable_resource_name_dns_aaaa_record_on_launch = false
      + id                                             = (known after apply)
      + ipv6_cidr_block_association_id                 = (known after apply)
      + ipv6_native                                    = false
      + map_public_ip_on_launch                        = true
      + owner_id                                       = (known after apply)
      + private_dns_hostname_type_on_launch            = (known after apply)
      + tags                                           = {
          + "Name" = "CLOUD_PUBLIC_SUBNET_dev"
        }
      + tags_all                                       = {
          + "Name" = "CLOUD_PUBLIC_SUBNET_dev"
        }
      + vpc_id                                         = (known after apply)
    }

  # module.resources-cloud.aws_vpc.cloud_vpc will be created
  + resource "aws_vpc" "cloud_vpc" {
      + arn                                  = (known after apply)
      + cidr_block                           = "172.16.0.0/16"
      + default_network_acl_id               = (known after apply)
      + default_route_table_id               = (known after apply)
      + default_security_group_id            = (known after apply)
      + dhcp_options_id                      = (known after apply)
      + enable_dns_hostnames                 = (known after apply)
      + enable_dns_support                   = true
      + enable_network_address_usage_metrics = (known after apply)
      + id                                   = (known after apply)
      + instance_tenancy                     = "default"
      + ipv6_association_id                  = (known after apply)
      + ipv6_cidr_block                      = (known after apply)
      + ipv6_cidr_block_network_border_group = (known after apply)
      + main_route_table_id                  = (known after apply)
      + owner_id                             = (known after apply)
      + tags                                 = {
          + "Name" = "CLOUD_VPC_dev"
        }
      + tags_all                             = {
          + "Name" = "CLOUD_VPC_dev"
        }
    }

  # module.resources-cloud.local_file.cluster_hosts_cfg will be created
  + resource "local_file" "cluster_hosts_cfg" {
      + content              = (known after apply)
      + content_base64sha256 = (known after apply)
      + content_base64sha512 = (known after apply)
      + content_md5          = (known after apply)
      + content_sha1         = (known after apply)
      + content_sha256       = (known after apply)
      + content_sha512       = (known after apply)
      + directory_permission = "0777"
      + file_permission      = "0644"
      + filename             = "resources-cloud/hosts.cfg"
      + id                   = (known after apply)
    }

  # module.resources-cloud.null_resource.run_ansible_playbook will be created
  + resource "null_resource" "run_ansible_playbook" {
      + id = (known after apply)
    }

  # module.resources-onprem.aws_default_vpc.default will be created
  + resource "aws_default_vpc" "default" {
      + arn                                  = (known after apply)
      + cidr_block                           = (known after apply)
      + default_network_acl_id               = (known after apply)
      + default_route_table_id               = (known after apply)
      + default_security_group_id            = (known after apply)
      + dhcp_options_id                      = (known after apply)
      + enable_dns_hostnames                 = true
      + enable_dns_support                   = true
      + enable_network_address_usage_metrics = (known after apply)
      + existing_default_vpc                 = (known after apply)
      + force_destroy                        = false
      + id                                   = (known after apply)
      + instance_tenancy                     = (known after apply)
      + ipv6_association_id                  = (known after apply)
      + ipv6_cidr_block                      = (known after apply)
      + ipv6_cidr_block_network_border_group = (known after apply)
      + main_route_table_id                  = (known after apply)
      + owner_id                             = (known after apply)
      + tags                                 = {
          + "Name" = "DEFAULT_VPC"
        }
      + tags_all                             = {
          + "Name" = "DEFAULT_VPC"
        }
    }

  # module.resources-onprem.aws_eip.jenkins will be created
  + resource "aws_eip" "jenkins" {
      + allocation_id        = (known after apply)
      + arn                  = (known after apply)
      + association_id       = (known after apply)
      + carrier_ip           = (known after apply)
      + customer_owned_ip    = (known after apply)
      + domain               = "vpc"
      + id                   = (known after apply)
      + instance             = (known after apply)
      + ipam_pool_id         = (known after apply)
      + network_border_group = (known after apply)
      + network_interface    = (known after apply)
      + private_dns          = (known after apply)
      + private_ip           = (known after apply)
      + ptr_record           = (known after apply)
      + public_dns           = (known after apply)
      + public_ip            = (known after apply)
      + public_ipv4_pool     = (known after apply)
      + tags_all             = (known after apply)
      + vpc                  = (known after apply)
    }

  # module.resources-onprem.aws_eip_association.jenkins will be created
  + resource "aws_eip_association" "jenkins" {
      + allocation_id        = (known after apply)
      + id                   = (known after apply)
      + instance_id          = (known after apply)
      + network_interface_id = (known after apply)
      + private_ip_address   = (known after apply)
      + public_ip            = (known after apply)
    }

  # module.resources-onprem.aws_instance.jenkins will be created
  + resource "aws_instance" "jenkins" {
      + ami                                  = "ami-03250b0e01c28d196"
      + arn                                  = (known after apply)
      + associate_public_ip_address          = (known after apply)
      + availability_zone                    = (known after apply)
      + cpu_core_count                       = (known after apply)
      + cpu_threads_per_core                 = (known after apply)
      + disable_api_stop                     = (known after apply)
      + disable_api_termination              = (known after apply)
      + ebs_optimized                        = (known after apply)
      + enable_primary_ipv6                  = (known after apply)
      + get_password_data                    = false
      + host_id                              = (known after apply)
      + host_resource_group_arn              = (known after apply)
      + iam_instance_profile                 = (known after apply)
      + id                                   = (known after apply)
      + instance_initiated_shutdown_behavior = (known after apply)
      + instance_lifecycle                   = (known after apply)
      + instance_state                       = (known after apply)
      + instance_type                        = "t2.small"
      + ipv6_address_count                   = (known after apply)
      + ipv6_addresses                       = (known after apply)
      + key_name                             = "UserPublicKey"
      + monitoring                           = (known after apply)
      + outpost_arn                          = (known after apply)
      + password_data                        = (known after apply)
      + placement_group                      = (known after apply)
      + placement_partition_number           = (known after apply)
      + primary_network_interface_id         = (known after apply)
      + private_dns                          = (known after apply)
      + private_ip                           = (known after apply)
      + public_dns                           = (known after apply)
      + public_ip                            = (known after apply)
      + secondary_private_ips                = (known after apply)
      + security_groups                      = (known after apply)
      + source_dest_check                    = true
      + spot_instance_request_id             = (known after apply)
      + subnet_id                            = (known after apply)
      + tags                                 = {
          + "Name" = "JENKINS_dev"
        }
      + tags_all                             = {
          + "Name" = "JENKINS_dev"
        }
      + tenancy                              = "default"
      + user_data                            = (known after apply)
      + user_data_base64                     = (known after apply)
      + user_data_replace_on_change          = false
      + vpc_security_group_ids               = (known after apply)

      + capacity_reservation_specification (known after apply)

      + cpu_options (known after apply)

      + ebs_block_device (known after apply)

      + enclave_options (known after apply)

      + ephemeral_block_device (known after apply)

      + instance_market_options (known after apply)

      + maintenance_options (known after apply)

      + metadata_options (known after apply)

      + network_interface (known after apply)

      + private_dns_name_options (known after apply)

      + root_block_device (known after apply)
    }

  # module.resources-onprem.aws_internet_gateway.onprem_vpc_igw will be created
  + resource "aws_internet_gateway" "onprem_vpc_igw" {
      + arn      = (known after apply)
      + id       = (known after apply)
      + owner_id = (known after apply)
      + tags     = {
          + "Name" = "ONPREM_VPC_IGW_dev"
        }
      + tags_all = {
          + "Name" = "ONPREM_VPC_IGW_dev"
        }
      + vpc_id   = (known after apply)
    }

  # module.resources-onprem.aws_network_acl.onprem_public_subnet_nacl will be created
  + resource "aws_network_acl" "onprem_public_subnet_nacl" {
      + arn        = (known after apply)
      + egress     = [
          + {
              + action          = "allow"
              + cidr_block      = "0.0.0.0/0"
              + from_port       = 0
              + protocol        = "-1"
              + rule_no         = 100
              + to_port         = 0
                # (1 unchanged attribute hidden)
            },
        ]
      + id         = (known after apply)
      + ingress    = [
          + {
              + action          = "allow"
              + cidr_block      = "0.0.0.0/0"
              + from_port       = 0
              + protocol        = "-1"
              + rule_no         = 100
              + to_port         = 0
                # (1 unchanged attribute hidden)
            },
        ]
      + owner_id   = (known after apply)
      + subnet_ids = (known after apply)
      + tags       = {
          + "Name" = "ONPREM_PUBLIC_SUBNET_NACL_dev"
        }
      + tags_all   = {
          + "Name" = "ONPREM_PUBLIC_SUBNET_NACL_dev"
        }
      + vpc_id     = (known after apply)
    }

  # module.resources-onprem.aws_network_acl_association.onprem_public_subnet_nacl_association will be created
  + resource "aws_network_acl_association" "onprem_public_subnet_nacl_association" {
      + id             = (known after apply)
      + network_acl_id = (known after apply)
      + subnet_id      = (known after apply)
    }

  # module.resources-onprem.aws_route_table.onprem_rt will be created
  + resource "aws_route_table" "onprem_rt" {
      + arn              = (known after apply)
      + id               = (known after apply)
      + owner_id         = (known after apply)
      + propagating_vgws = (known after apply)
      + route            = [
          + {
              + cidr_block                 = "0.0.0.0/0"
              + gateway_id                 = (known after apply)
                # (11 unchanged attributes hidden)
            },
        ]
      + tags             = {
          + "Name" = "ONPREM_PUBLIC_SUBNET_DEFAULT_RT_dev"
        }
      + tags_all         = {
          + "Name" = "ONPREM_PUBLIC_SUBNET_DEFAULT_RT_dev"
        }
      + vpc_id           = (known after apply)
    }

  # module.resources-onprem.aws_route_table_association.onprem_public_subnet_default_rt_association will be created
  + resource "aws_route_table_association" "onprem_public_subnet_default_rt_association" {
      + id             = (known after apply)
      + route_table_id = (known after apply)
      + subnet_id      = (known after apply)
    }

  # module.resources-onprem.aws_security_group.jenkins_access will be created
  + resource "aws_security_group" "jenkins_access" {
      + arn                    = (known after apply)
      + description            = "ICMP, HTTP and SSH Jenkins Access"
      + egress                 = [
          + {
              + cidr_blocks      = [
                  + "0.0.0.0/0",
                ]
              + from_port        = 0
              + ipv6_cidr_blocks = []
              + prefix_list_ids  = []
              + protocol         = "-1"
              + security_groups  = []
              + self             = false
              + to_port          = 0
                # (1 unchanged attribute hidden)
            },
        ]
      + id                     = (known after apply)
      + ingress                = [
          + {
              + cidr_blocks      = [
                  + "0.0.0.0/0",
                ]
              + from_port        = 22
              + ipv6_cidr_blocks = []
              + prefix_list_ids  = []
              + protocol         = "tcp"
              + security_groups  = []
              + self             = false
              + to_port          = 22
                # (1 unchanged attribute hidden)
            },
          + {
              + cidr_blocks      = [
                  + "0.0.0.0/0",
                ]
              + from_port        = 8080
              + ipv6_cidr_blocks = []
              + prefix_list_ids  = []
              + protocol         = "tcp"
              + security_groups  = []
              + self             = false
              + to_port          = 8080
                # (1 unchanged attribute hidden)
            },
          + {
              + cidr_blocks      = [
                  + "0.0.0.0/0",
                ]
              + from_port        = 8
              + ipv6_cidr_blocks = []
              + prefix_list_ids  = []
              + protocol         = "icmp"
              + security_groups  = []
              + self             = false
              + to_port          = 0
                # (1 unchanged attribute hidden)
            },
        ]
      + name                   = "JENKINS_ACCESS_dev"
      + name_prefix            = (known after apply)
      + owner_id               = (known after apply)
      + revoke_rules_on_delete = false
      + tags_all               = (known after apply)
      + vpc_id                 = (known after apply)
    }

  # module.resources-onprem.aws_subnet.onprem_public_subnet will be created
  + resource "aws_subnet" "onprem_public_subnet" {
      + arn                                            = (known after apply)
      + assign_ipv6_address_on_creation                = false
      + availability_zone                              = "eu-central-1b"
      + availability_zone_id                           = (known after apply)
      + cidr_block                                     = "172.21.0.0/24"
      + enable_dns64                                   = false
      + enable_resource_name_dns_a_record_on_launch    = false
      + enable_resource_name_dns_aaaa_record_on_launch = false
      + id                                             = (known after apply)
      + ipv6_cidr_block_association_id                 = (known after apply)
      + ipv6_native                                    = false
      + map_public_ip_on_launch                        = true
      + owner_id                                       = (known after apply)
      + private_dns_hostname_type_on_launch            = (known after apply)
      + tags                                           = {
          + "Name" = "ONPREM_PUBLIC_SUBNET_dev"
        }
      + tags_all                                       = {
          + "Name" = "ONPREM_PUBLIC_SUBNET_dev"
        }
      + vpc_id                                         = (known after apply)
    }

  # module.resources-onprem.aws_vpc.onprem_vpc will be created
  + resource "aws_vpc" "onprem_vpc" {
      + arn                                  = (known after apply)
      + cidr_block                           = "172.21.0.0/16"
      + default_network_acl_id               = (known after apply)
      + default_route_table_id               = (known after apply)
      + default_security_group_id            = (known after apply)
      + dhcp_options_id                      = (known after apply)
      + enable_dns_hostnames                 = (known after apply)
      + enable_dns_support                   = true
      + enable_network_address_usage_metrics = (known after apply)
      + id                                   = (known after apply)
      + instance_tenancy                     = "default"
      + ipv6_association_id                  = (known after apply)
      + ipv6_cidr_block                      = (known after apply)
      + ipv6_cidr_block_network_border_group = (known after apply)
      + main_route_table_id                  = (known after apply)
      + owner_id                             = (known after apply)
      + tags                                 = {
          + "Name" = "ONPREM_VPC_dev"
        }
      + tags_all                             = {
          + "Name" = "ONPREM_VPC_dev"
        }
    }

  # module.resources-onprem.local_file.jenkins_hosts_cfg will be created
  + resource "local_file" "jenkins_hosts_cfg" {
      + content              = (known after apply)
      + content_base64sha256 = (known after apply)
      + content_base64sha512 = (known after apply)
      + content_md5          = (known after apply)
      + content_sha1         = (known after apply)
      + content_sha256       = (known after apply)
      + content_sha512       = (known after apply)
      + directory_permission = "0777"
      + file_permission      = "0644"
      + filename             = "resources-onprem/hosts.cfg"
      + id                   = (known after apply)
    }

  # module.resources-onprem.null_resource.run_ansible_playbook will be created
  + resource "null_resource" "run_ansible_playbook" {
      + id = (known after apply)
    }

Plan: 38 to add, 0 to change, 0 to destroy.

Changes to Outputs:
  + vpc_peering_connection_id = (known after apply)

Do you want to perform these actions in workspace "dev"?
  Terraform will perform the actions described above.
  Only 'yes' will be accepted to approve.

  Enter a value: yes

aws_key_pair.tf_key: Creating...
aws_kms_key.vault: Creating...
module.resources-cloud.aws_vpc.cloud_vpc: Creating...
module.resources-onprem.aws_default_vpc.default: Creating...
module.resources-onprem.aws_vpc.onprem_vpc: Creating...
aws_key_pair.tf_key: Creation complete after 0s [id=UserPublicKey]
aws_kms_key.vault: Creation complete after 0s [id=a6f77c16-1e47-4e96-bf8c-26dc8c4df1ea]
module.resources-onprem.aws_default_vpc.default: Creation complete after 1s [id=vpc-077c402eb2331b90b]
module.resources-onprem.aws_vpc.onprem_vpc: Creation complete after 1s [id=vpc-0ae17710076dc5a26]
module.resources-cloud.aws_vpc.cloud_vpc: Creation complete after 1s [id=vpc-0cb87ef7bdac04533]
module.resources-onprem.aws_internet_gateway.onprem_vpc_igw: Creating...
module.resources-onprem.aws_subnet.onprem_public_subnet: Creating...
module.resources-onprem.aws_security_group.jenkins_access: Creating...
module.resources-cloud.aws_internet_gateway.cloud_vpc_igw: Creating...
aws_vpc_peering_connection.onprem_2_cloud_vpc_peering: Creating...
module.resources-cloud.aws_subnet.cloud_public_subnet: Creating...
module.resources-cloud.aws_security_group.cluster_access: Creating...
module.resources-onprem.aws_internet_gateway.onprem_vpc_igw: Creation complete after 1s [id=igw-00471161cc7c02d0e]
module.resources-onprem.aws_route_table.onprem_rt: Creating...
module.resources-cloud.aws_internet_gateway.cloud_vpc_igw: Creation complete after 1s [id=igw-084ff74df2a318e84]
module.resources-cloud.aws_route_table.cloud_rt: Creating...
aws_vpc_peering_connection.onprem_2_cloud_vpc_peering: Creation complete after 1s [id=pcx-0ffd1c1c56440e611]
module.resources-cloud.aws_route_table.cloud_rt: Creation complete after 1s [id=rtb-010a95f2077b0cfb6]
aws_route.route_2_onprem: Creating...
module.resources-onprem.aws_route_table.onprem_rt: Creation complete after 1s [id=rtb-06819f881ed2bc07d]
aws_route.route_2_cloud: Creating...
aws_route.route_2_onprem: Creation complete after 0s [id=r-rtb-010a95f2077b0cfb64073482484]
aws_route.route_2_cloud: Creation complete after 0s [id=r-rtb-06819f881ed2bc07d3246677288]
module.resources-cloud.aws_security_group.cluster_access: Creation complete after 3s [id=sg-082a782b6a3fc5109]
module.resources-onprem.aws_security_group.jenkins_access: Creation complete after 3s [id=sg-04ee6df1559d631c2]
module.resources-onprem.aws_subnet.onprem_public_subnet: Still creating... [10s elapsed]
module.resources-cloud.aws_subnet.cloud_public_subnet: Still creating... [10s elapsed]
module.resources-cloud.aws_subnet.cloud_public_subnet: Creation complete after 11s [id=subnet-0710ae8c4638514d1]
module.resources-onprem.aws_subnet.onprem_public_subnet: Creation complete after 11s [id=subnet-04c26aaecbf98a0df]
module.resources-cloud.aws_route_table_association.cloud_public_subnet_default_rt_association: Creating...
module.resources-onprem.aws_route_table_association.onprem_public_subnet_default_rt_association: Creating...
module.resources-onprem.aws_network_acl.onprem_public_subnet_nacl: Creating...
module.resources-cloud.aws_network_acl.cloud_public_subnet_nacl: Creating...
module.resources-cloud.aws_instance.cluster[0]: Creating...
module.resources-cloud.aws_instance.cluster[1]: Creating...
module.resources-onprem.aws_instance.jenkins: Creating...
module.resources-cloud.aws_instance.cluster[2]: Creating...
module.resources-onprem.aws_route_table_association.onprem_public_subnet_default_rt_association: Creation complete after 1s [id=rtbassoc-00b82b7e367749bd0]
module.resources-cloud.aws_route_table_association.cloud_public_subnet_default_rt_association: Creation complete after 1s [id=rtbassoc-087f64b5ee3298524]
module.resources-onprem.aws_network_acl.onprem_public_subnet_nacl: Creation complete after 1s [id=acl-0e17663f0ae11927e]
module.resources-onprem.aws_network_acl_association.onprem_public_subnet_nacl_association: Creating...
module.resources-cloud.aws_network_acl.cloud_public_subnet_nacl: Creation complete after 1s [id=acl-055b583b8a8e2fb1b]
module.resources-cloud.aws_network_acl_association.cloud_public_subnet_nacl_association: Creating...
module.resources-onprem.aws_network_acl_association.onprem_public_subnet_nacl_association: Creation complete after 1s [id=aclassoc-0421ffdc30ed43a11]
module.resources-cloud.aws_network_acl_association.cloud_public_subnet_nacl_association: Creation complete after 1s [id=aclassoc-08183fff7290b8fd2]
module.resources-cloud.aws_instance.cluster[0]: Still creating... [10s elapsed]
module.resources-cloud.aws_instance.cluster[1]: Still creating... [10s elapsed]
module.resources-onprem.aws_instance.jenkins: Still creating... [10s elapsed]
module.resources-cloud.aws_instance.cluster[2]: Still creating... [10s elapsed]
module.resources-cloud.aws_instance.cluster[2]: Creation complete after 13s [id=i-089125ca29c163dfd]
module.resources-cloud.aws_instance.cluster[0]: Creation complete after 13s [id=i-0adb5261468883062]
module.resources-cloud.aws_instance.cluster[1]: Creation complete after 13s [id=i-01bbb6d1ac1c07a36]
module.resources-cloud.aws_eip.cluster[1]: Creating...
module.resources-cloud.aws_eip.cluster[0]: Creating...
module.resources-cloud.aws_eip.cluster[2]: Creating...
module.resources-onprem.aws_instance.jenkins: Creation complete after 13s [id=i-085b2027992122d6f]
module.resources-onprem.aws_eip.jenkins: Creating...
module.resources-cloud.aws_eip.cluster[1]: Creation complete after 2s [id=eipalloc-0918035574d712a58]
module.resources-onprem.aws_eip.jenkins: Creation complete after 2s [id=eipalloc-0e8d81c0e27867284]
module.resources-cloud.aws_eip.cluster[2]: Creation complete after 2s [id=eipalloc-0667e1349983b7c57]
module.resources-cloud.aws_eip.cluster[0]: Creation complete after 2s [id=eipalloc-0ff8542d2d044ee94]
module.resources-onprem.aws_eip_association.jenkins: Creating...
module.resources-cloud.aws_eip_association.cluster[2]: Creating...
module.resources-cloud.aws_eip_association.cluster[1]: Creating...
module.resources-cloud.aws_eip_association.cluster[0]: Creating...
 module.resources-cloud.aws_eip_association.cluster[1]: Creation complete after 1s [id=eipassoc-05e300e22bfcfd14e]
module.resources-onprem.aws_eip_association.jenkins: Creation complete after 1s [id=eipassoc-09fa7df9b2622e57f]
module.resources-cloud.aws_eip_association.cluster[0]: Creation complete after 1s [id=eipassoc-0d965fb543a464d7e]
module.resources-onprem.local_file.jenkins_hosts_cfg: Creating...
module.resources-onprem.local_file.jenkins_hosts_cfg: Creation complete after 0s [id=922ec2d751678cb08e2f50ed6191141e0b11df91]
module.resources-cloud.aws_eip_association.cluster[2]: Creation complete after 1s [id=eipassoc-072ec80b5dfab9a72]
module.resources-onprem.null_resource.run_ansible_playbook: Creating...
module.resources-onprem.null_resource.run_ansible_playbook: Provisioning with 'local-exec'...
module.resources-onprem.null_resource.run_ansible_playbook (local-exec): Executing: ["/bin/sh" "-c" "ANSIBLE_HOST_KEY_CHECKING=False ANSIBLE_PYTHON_INTERPRETER=auto_silent ansible-playbook -u ubuntu -i hosts.cfg --private-key ~/.ssh/id_rsa playbook.yml"]
module.resources-cloud.local_file.cluster_hosts_cfg: Creating...
module.resources-cloud.local_file.cluster_hosts_cfg: Creation complete after 0s [id=aa2fd69491da1253590fd5f9e50626485d2be923]
module.resources-cloud.null_resource.run_ansible_playbook: Creating...
module.resources-cloud.null_resource.run_ansible_playbook: Provisioning with 'local-exec'...
module.resources-cloud.null_resource.run_ansible_playbook (local-exec): Executing: ["/bin/sh" "-c" "ANSIBLE_HOST_KEY_CHECKING=False ANSIBLE_PYTHON_INTERPRETER=auto_silent ansible-playbook -u ubuntu -i hosts.cfg --private-key ~/.ssh/id_rsa playbook.yml"]

module.resources-cloud.null_resource.run_ansible_playbook (local-exec): PLAY [Install Nomad, Consul, Vault and Docker on cluster nodes] ****************

module.resources-cloud.null_resource.run_ansible_playbook (local-exec): TASK [Wait 600 seconds, but only start checking after 30 seconds] **************

module.resources-onprem.null_resource.run_ansible_playbook (local-exec): PLAY [Install Jenkins and Docker] **********************************************

module.resources-onprem.null_resource.run_ansible_playbook (local-exec): TASK [Wait 300 seconds, but only start checking after 30 seconds] **************
module.resources-onprem.null_resource.run_ansible_playbook: Still creating... [10s elapsed]
module.resources-cloud.null_resource.run_ansible_playbook: Still creating... [10s elapsed]
module.resources-onprem.null_resource.run_ansible_playbook: Still creating... [20s elapsed]
module.resources-cloud.null_resource.run_ansible_playbook: Still creating... [20s elapsed]
module.resources-onprem.null_resource.run_ansible_playbook: Still creating... [30s elapsed]
module.resources-cloud.null_resource.run_ansible_playbook: Still creating... [30s elapsed]
module.resources-cloud.null_resource.run_ansible_playbook (local-exec): ok: [18.197.234.79]
module.resources-cloud.null_resource.run_ansible_playbook (local-exec): ok: [3.76.168.93]
module.resources-cloud.null_resource.run_ansible_playbook (local-exec): ok: [3.68.36.40]

module.resources-cloud.null_resource.run_ansible_playbook (local-exec): TASK [Gathering facts] *********************************************************
module.resources-onprem.null_resource.run_ansible_playbook (local-exec): ok: [18.197.18.117]

module.resources-onprem.null_resource.run_ansible_playbook (local-exec): TASK [Install dependencies and some optional apps] *****************************
module.resources-cloud.null_resource.run_ansible_playbook (local-exec): ok: [18.197.234.79]
module.resources-cloud.null_resource.run_ansible_playbook (local-exec): ok: [3.76.168.93]
module.resources-cloud.null_resource.run_ansible_playbook (local-exec): ok: [3.68.36.40]

module.resources-cloud.null_resource.run_ansible_playbook (local-exec): TASK [Install dependencies and some optional apps] *****************************
module.resources-onprem.null_resource.run_ansible_playbook: Still creating... [40s elapsed]
module.resources-cloud.null_resource.run_ansible_playbook: Still creating... [40s elapsed]
module.resources-onprem.null_resource.run_ansible_playbook: Still creating... [50s elapsed]
module.resources-cloud.null_resource.run_ansible_playbook: Still creating... [50s elapsed]
module.resources-onprem.null_resource.run_ansible_playbook: Still creating... [1m0s elapsed]
module.resources-cloud.null_resource.run_ansible_playbook: Still creating... [1m0s elapsed]
module.resources-onprem.null_resource.run_ansible_playbook: Still creating... [1m10s elapsed]
module.resources-cloud.null_resource.run_ansible_playbook: Still creating... [1m10s elapsed]
module.resources-onprem.null_resource.run_ansible_playbook (local-exec): changed: [18.197.18.117]

module.resources-onprem.null_resource.run_ansible_playbook (local-exec): TASK [Add Jenkins Repo GPG key] ************************************************
module.resources-onprem.null_resource.run_ansible_playbook: Still creating... [1m20s elapsed]
module.resources-cloud.null_resource.run_ansible_playbook: Still creating... [1m20s elapsed]
module.resources-onprem.null_resource.run_ansible_playbook (local-exec): changed: [18.197.18.117]

module.resources-onprem.null_resource.run_ansible_playbook (local-exec): TASK [Add Jenkins repository] **************************************************
module.resources-cloud.null_resource.run_ansible_playbook (local-exec): changed: [18.197.234.79]
module.resources-cloud.null_resource.run_ansible_playbook (local-exec): changed: [3.76.168.93]
module.resources-cloud.null_resource.run_ansible_playbook (local-exec): changed: [3.68.36.40]

module.resources-cloud.null_resource.run_ansible_playbook (local-exec): TASK [Add HashiCorp Repo GPG Key] **********************************************
module.resources-cloud.null_resource.run_ansible_playbook (local-exec): changed: [18.197.234.79]
module.resources-cloud.null_resource.run_ansible_playbook (local-exec): changed: [3.76.168.93]
module.resources-cloud.null_resource.run_ansible_playbook (local-exec): changed: [3.68.36.40]

module.resources-cloud.null_resource.run_ansible_playbook (local-exec): TASK [Add HashiCorp Repo] ******************************************************
module.resources-onprem.null_resource.run_ansible_playbook (local-exec): changed: [18.197.18.117]

module.resources-onprem.null_resource.run_ansible_playbook (local-exec): TASK [Install Jenkins] *********************************************************
module.resources-onprem.null_resource.run_ansible_playbook: Still creating... [1m30s elapsed]
module.resources-cloud.null_resource.run_ansible_playbook: Still creating... [1m30s elapsed]
module.resources-cloud.null_resource.run_ansible_playbook (local-exec): changed: [3.76.168.93]
module.resources-cloud.null_resource.run_ansible_playbook (local-exec): changed: [18.197.234.79]
module.resources-cloud.null_resource.run_ansible_playbook (local-exec): changed: [3.68.36.40]

module.resources-cloud.null_resource.run_ansible_playbook (local-exec): TASK [Add Docker Repo GPG key] *************************************************
module.resources-onprem.null_resource.run_ansible_playbook: Still creating... [1m40s elapsed]
module.resources-cloud.null_resource.run_ansible_playbook: Still creating... [1m40s elapsed]
module.resources-cloud.null_resource.run_ansible_playbook (local-exec): changed: [3.68.36.40]
module.resources-cloud.null_resource.run_ansible_playbook (local-exec): changed: [18.197.234.79]
module.resources-cloud.null_resource.run_ansible_playbook (local-exec): changed: [3.76.168.93]

module.resources-cloud.null_resource.run_ansible_playbook (local-exec): TASK [Add Docker Repo] *********************************************************
module.resources-cloud.null_resource.run_ansible_playbook (local-exec): changed: [3.68.36.40]
module.resources-cloud.null_resource.run_ansible_playbook (local-exec): changed: [18.197.234.79]
module.resources-cloud.null_resource.run_ansible_playbook (local-exec): changed: [3.76.168.93]

module.resources-cloud.null_resource.run_ansible_playbook (local-exec): TASK [Install Nomad, Consul, Vault and Docker] *********************************
module.resources-onprem.null_resource.run_ansible_playbook: Still creating... [1m50s elapsed]
module.resources-cloud.null_resource.run_ansible_playbook: Still creating... [1m50s elapsed]
module.resources-onprem.null_resource.run_ansible_playbook (local-exec): changed: [18.197.18.117]

module.resources-onprem.null_resource.run_ansible_playbook (local-exec): TASK [Ensure Jenkins is started and enabled] ***********************************
module.resources-onprem.null_resource.run_ansible_playbook (local-exec): ok: [18.197.18.117]

module.resources-onprem.null_resource.run_ansible_playbook (local-exec): TASK [Add Docker Repo GPG key] *************************************************
module.resources-onprem.null_resource.run_ansible_playbook (local-exec): changed: [18.197.18.117]

module.resources-onprem.null_resource.run_ansible_playbook (local-exec): TASK [Add Docker repository] ***************************************************
module.resources-onprem.null_resource.run_ansible_playbook: Still creating... [2m0s elapsed]
module.resources-cloud.null_resource.run_ansible_playbook: Still creating... [2m0s elapsed]
module.resources-onprem.null_resource.run_ansible_playbook (local-exec): changed: [18.197.18.117]

module.resources-onprem.null_resource.run_ansible_playbook (local-exec): TASK [Install Docker] **********************************************************
module.resources-onprem.null_resource.run_ansible_playbook: Still creating... [2m10s elapsed]
module.resources-cloud.null_resource.run_ansible_playbook: Still creating... [2m10s elapsed]
module.resources-onprem.null_resource.run_ansible_playbook: Still creating... [2m20s elapsed]
module.resources-cloud.null_resource.run_ansible_playbook: Still creating... [2m20s elapsed]
module.resources-onprem.null_resource.run_ansible_playbook (local-exec): changed: [18.197.18.117]

module.resources-onprem.null_resource.run_ansible_playbook (local-exec): TASK [Ensure Docker is started and enabled] ************************************
module.resources-onprem.null_resource.run_ansible_playbook (local-exec): ok: [18.197.18.117]

module.resources-onprem.null_resource.run_ansible_playbook (local-exec): TASK [Retrieve Jenkins unlock code] ********************************************
module.resources-onprem.null_resource.run_ansible_playbook (local-exec): changed: [18.197.18.117]

module.resources-onprem.null_resource.run_ansible_playbook (local-exec): TASK [debug] *******************************************************************
module.resources-onprem.null_resource.run_ansible_playbook (local-exec): ok: [18.197.18.117] => {
module.resources-onprem.null_resource.run_ansible_playbook (local-exec):     "msg": "Jenkins unlock code (install admin password) is c8a2728c0cbb4b1ca389b4993af449ca"
module.resources-onprem.null_resource.run_ansible_playbook (local-exec): }

module.resources-onprem.null_resource.run_ansible_playbook (local-exec): TASK [Unlock Jenkins and add main admin user] **********************************
module.resources-cloud.null_resource.run_ansible_playbook (local-exec): changed: [18.197.234.79]
module.resources-cloud.null_resource.run_ansible_playbook (local-exec): changed: [3.76.168.93]
module.resources-cloud.null_resource.run_ansible_playbook (local-exec): changed: [3.68.36.40]

module.resources-cloud.null_resource.run_ansible_playbook (local-exec): TASK [Configure Consul as a server] ********************************************
module.resources-onprem.null_resource.run_ansible_playbook (local-exec): ok: [18.197.18.117]

module.resources-onprem.null_resource.run_ansible_playbook (local-exec): TASK [complete setup wizard] ***************************************************
module.resources-cloud.null_resource.run_ansible_playbook (local-exec): changed: [18.197.234.79]
module.resources-cloud.null_resource.run_ansible_playbook (local-exec): changed: [3.76.168.93]
module.resources-cloud.null_resource.run_ansible_playbook (local-exec): changed: [3.68.36.40]

module.resources-cloud.null_resource.run_ansible_playbook (local-exec): TASK [Configure Nomad as a server] *********************************************
module.resources-onprem.null_resource.run_ansible_playbook (local-exec): ok: [18.197.18.117]

module.resources-onprem.null_resource.run_ansible_playbook (local-exec): PLAY RECAP *********************************************************************
module.resources-onprem.null_resource.run_ansible_playbook (local-exec): 18.197.18.117              : ok=14   changed=8    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0

module.resources-onprem.null_resource.run_ansible_playbook: Creation complete after 2m29s [id=7813338176761783491]
module.resources-cloud.null_resource.run_ansible_playbook: Still creating... [2m30s elapsed]
module.resources-cloud.null_resource.run_ansible_playbook (local-exec): changed: [3.68.36.40]
module.resources-cloud.null_resource.run_ansible_playbook (local-exec): changed: [3.76.168.93]
module.resources-cloud.null_resource.run_ansible_playbook (local-exec): changed: [18.197.234.79]

module.resources-cloud.null_resource.run_ansible_playbook (local-exec): TASK [Configure Vault as a server] *********************************************
module.resources-cloud.null_resource.run_ansible_playbook (local-exec): changed: [3.76.168.93]
module.resources-cloud.null_resource.run_ansible_playbook (local-exec): changed: [3.68.36.40]
module.resources-cloud.null_resource.run_ansible_playbook (local-exec): changed: [18.197.234.79]

module.resources-cloud.null_resource.run_ansible_playbook (local-exec): PLAY RECAP *********************************************************************
module.resources-cloud.null_resource.run_ansible_playbook (local-exec): 18.197.234.79              : ok=11   changed=9    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0
module.resources-cloud.null_resource.run_ansible_playbook (local-exec): 3.68.36.40                 : ok=11   changed=9    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0
module.resources-cloud.null_resource.run_ansible_playbook (local-exec): 3.76.168.93                : ok=11   changed=9    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0

module.resources-cloud.null_resource.run_ansible_playbook: Creation complete after 2m33s [id=1774601183455357234]

Apply complete! Resources: 38 added, 0 changed, 0 destroyed.

Outputs:

vpc_peering_connection_id = "pcx-0ffd1c1c56440e611"
